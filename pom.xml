<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fi.eis.applications</groupId>
    <artifactId>spring-boot-security-example</artifactId>
    <version>1.0-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.2.RELEASE</version>
    </parent>

    <description>Simple Spring Boot app to get started.</description>
    <url>https://github.com/eis/${project.artifactId}</url>
    <ciManagement>
        <system>Travis</system>
        <url>https://travis-ci.org/eis/${project.artifactId}</url>
    </ciManagement>
    <issueManagement>
        <system>Github</system>
        <url>https://github.com/eis/${project.artifactId}/issues</url>
    </issueManagement>
    <scm>
        <connection>scm:git:git://github.com/eis/${project.artifactId}.git</connection>
        <developerConnection>scm:git:git@github.com:eis/${project.artifactId}.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/eis/${project.artifactId}</url>
    </scm>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- code generation for VOs -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.2</version>
        </dependency>

        <!-- static resources -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>3.3.7</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>1.12.4</version>
        </dependency>

        <!-- user agent analysis -->
        <dependency>
            <groupId>eu.bitwalker</groupId>
            <artifactId>UserAgentUtils</artifactId>
            <version>1.20</version>
        </dependency>

        <!-- below for robot framework -->
        <dependency>
          <groupId>org.seleniumhq.selenium</groupId>
          <artifactId>selenium-java</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.markusbernhardt</groupId>
            <artifactId>robotframework-selenium2library-java</artifactId>
            <version>1.4.0.7</version>
            <scope>test</scope>
            <!-- http://stackoverflow.com/questions/8375423/missing-artifact-com-suntoolsjar -->
            <exclusions>
                <exclusion>
                    <artifactId>tools</artifactId>
                    <groupId>com.sun</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- below for rest-assured -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>spring-mock-mvc</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
        </dependency>
        <!-- Spring-test uses jsonassert dependency for json() -->
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Spring-test uses jsonpath for jsonPath() -->
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path-assert</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- fluent assertions -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.18.1</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <properties>
        <java.version>1.8</java.version>
        <groovy.version>2.4.6</groovy.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- added below to get integration tests -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <executions>
                <execution>
                  <goals>
                    <goal>integration-test</goal>
                    <goal>verify</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <executions>
                  <execution>
                    <id>verify-style</id>
                    <phase>validate</phase>
                    <goals>
                      <goal>check</goal>
                    </goals>
                  </execution>
                </executions>
                <configuration>
                  <logViolationsToConsole>true</logViolationsToConsole>
                  <checkstyleRules>
                    <module name="Checker">
                      <!-- Verifies lack of tabs                               -->
                      <!-- See http://checkstyle.sf.net/config_whitespace.html -->
                      <module name="FileTabCharacter"/>
                      <!-- Verifies lack of windows line endings -->
                      <module name="RegexpMultiline">
                        <property name="format" value="(?s:\r\n.*)"/>
                        <property name="message" value="Do not use Windows line endings"/>
                    </module>
                    </module>
                  </checkstyleRules>
                </configuration>
              </plugin>
            <!-- below for robot acceptance tests -->
            <plugin>
                <!-- to run robot acceptance tests: mvn robotframework:run -->
                <groupId>org.robotframework</groupId>
                <artifactId>robotframework-maven-plugin</artifactId>
                <version>1.4.4</version>
                <!-- execution below can be used, if tests are needed on mvn:integration-test-->
                <!--
                <executions>
                  <execution>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </execution>
                </executions>
                -->
            </plugin>
            <plugin>
                <!-- to report local results to coveralls, use -DrepoToken=yourrepotoken -->
                <!-- Travis should work automatically -->
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>4.0.0</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <format>xml</format>
                    <maxmem>256m</maxmem>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <outputDirectory>${basedir}/target/site</outputDirectory>
        <plugins>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.9</version>
            </plugin>
        </plugins>
    </reporting>
</project>
